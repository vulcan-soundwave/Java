package cc.openhome.controller;

import java.io.*;
import java.util.*;

import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebInitParam;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import cc.openhome.model.UserService;

@WebServlet(
    urlPatterns={"/message.do"},
    initParams={
        @WebInitParam(name = "LOGIN_VIEW", value = "index.html"),
        @WebInitParam(name = "SUCCESS_VIEW", value = "member.view"),
        @WebInitParam(name = "ERROR_VIEW", value = "member.view")
    }
)
public class Message extends HttpServlet {
    private String LOGIN_VIEW = "index.html";
    private String SUCCESS_VIEW = "member.view";
    private String ERROR_VIEW = "member.view";
    
    @Override
    public void init(ServletConfig config) throws ServletException {
        LOGIN_VIEW = getServletConfig().getInitParameter("LOGIN_VIEW");
        SUCCESS_VIEW = getServletConfig().getInitParameter("SUCCESS_VIEW");
        ERROR_VIEW = getServletConfig().getInitParameter("ERROR_VIEW");
    }
    
    
    protected void doPost(HttpServletRequest request, 
                          HttpServletResponse response) 
                             throws ServletException, IOException {
        if(request.getSession().getAttribute("login") == null) {
            response.sendRedirect(LOGIN_VIEW);
            return;
        }
            
	    request.setCharacterEncoding("UTF-8");
	    String blabla = request.getParameter("blabla");
	    if(blabla != null && blabla.length() != 0) {
	        if(blabla.length() < 140) {
	            String username = (String) request.getSession().getAttribute("login");
	            UserService userService = (UserService) getServletContext().getAttribute("userService");
                userService.addMessage(username, blabla);
                response.sendRedirect(SUCCESS_VIEW);
	        }
	        else {
	            request.getRequestDispatcher(ERROR_VIEW).forward(request, response);
	        }
	    }
	    else {
	        response.sendRedirect(ERROR_VIEW);
	    }
	    
	}
}
