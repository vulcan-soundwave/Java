package cc.openhome;

import java.io.Serializable;
import java.sql.*;
import java.util.*;

import javax.sql.rowset.JdbcRowSet;

import com.sun.rowset.JdbcRowSetImpl;

public class GuestBookBean2 implements Serializable{
    private JdbcRowSet rowset;
    public GuestBookBean2() {
        rowset = new JdbcRowSetImpl();
        SQLException ex = null;
        try {
            rowset.setDataSourceName("jdbc/demo");
            rowset.setCommand("SELECT * FROM t_message");
            rowset.execute();
        } catch (SQLException e) {
            ex = e;
        }
        finally {
            if(rowset != null) {
                try {
                    rowset.close();
                } catch (SQLException e) {
                    if(ex == null) {
                        ex = e;
                    }
                }
            }
        }
        if(ex != null) {
            throw new RuntimeException(ex);
        }
    }

    public void setMessage(Message message) {
        Connection conn = null;
        Statement statement = null;
        SQLException ex = null;
        try {
            conn = DriverManager.getConnection(jdbcUrl, username, password);
            statement = conn.createStatement();
            statement.executeUpdate(
                    "INSERT INTO t_message(name, email, msg) VALUES ('"
                      + message.getName() + "', '"
                      + message.getEmail() +"', '"
                      + message.getMsg() + "')");
        } catch (SQLException e) {
            ex = e;
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                }
                catch(SQLException e) {
                    if(ex == null) {
                        ex = e;
                    }
                }
            }
            
            if (conn != null) {
                try {
                    conn.close();
                }
                catch(SQLException e) {
                    if(ex == null) {
                        ex = e;
                    }
                }
            }
            
            if(ex != null) {
                throw new RuntimeException(ex);
            }
        }
    }

    public List<Message> getMessages() {
        SQLException ex = null;
        List<Message> messages = null;
        try {
            messages = new ArrayList<Message>();
            while (rowset.next()) {
                Message message = new Message();
                message.setId(rowset.getLong(1));
                message.setName(rowset.getString(2));
                message.setEmail(rowset.getString(3));
                message.setMsg(rowset.getString(4));
                messages.add(message);
            }
        } catch (SQLException e) {
            if(rowset != null) {
                try {
                    rowset.close();
                } catch (SQLException e) {
                    if(ex == null) {
                        ex = e;
                    }
                }
            }
            
            if(ex != null) {
                throw new RuntimeException(ex);
            }
            ex = e;
        } finally {
            
        }
        return messages;
    }
}
